
// Code generated by gox; DO NOT EDIT.
package gox
import (
	"github.com/caleb-sideras/gox-website/src/pages/docs/data"
	"github.com/caleb-sideras/gox-website/src/pages/docs/handle"
	"github.com/caleb-sideras/gox-website/src/pages/docs/render"
	"github.com/caleb-sideras/gox-website/src/pages/nav"
	"github.com/caleb-sideras/gox-website/src/pages/home_"
	"github.com/caleb-sideras/gox-website/src/pages/examples/pages"
	"github.com/caleb-sideras/gox-website/src/pages/docs/pages"
	"github.com/caleb-sideras/gox-website/src/pages/docs/router"
	"github.com/caleb-sideras/gox-website/src/pages/docs/routing"
	"github.com/caleb-sideras/gox-website/src/pages/examples/data"
	"github.com/caleb-sideras/gox-website/src/pages/examples/data/rn"
	"github.com/caleb-sideras/gox-website/src/pages/docs/index"
	"github.com/caleb-sideras/gox-website/src/pages/examples/todo"
	"github.com/caleb-sideras/gox-website/src/pages/docs/introduction_"
	"github.com/caleb-sideras/gox-website/src/pages/examples/render"
)

var IndexList = map[string]string{
	"/tmp" : "pages/index.html",
	"/docs/render" : "pages/docs/index.html",
	"/docs/handle" : "pages/docs/index.html",
	"/examples/todo" : "pages/examples/index.html",
	"/examples/pages/examples" : "pages/examples/pages/examples/index.html",
	"/docs/router" : "pages/docs/index.html",
	"/examples/render" : "pages/examples/index.html",
	"/docs/data" : "pages/docs/index.html",
	"/examples" : "pages/examples/index.html",
	"/" : "pages/index.html",
	"/nav" : "pages/index.html",
	"/docs/index" : "pages/docs/index.html",
	"/examples/pages" : "pages/examples/index.html",
	"/examples/data/rn" : "pages/examples/data/rn/index.html",
	"/docs/routing" : "pages/docs/index.html",
	"/docs/pages" : "pages/docs/index.html",
	"/examples/data" : "pages/examples/index.html",
	"/docs" : "pages/docs/index.html",
}

var PagesList = map[string]PageData{
	"/examples/pages/examples": {Data: EmptyPageData, Index: "pages/examples/pages/examples/index.html", Page: "pages/examples/pages/examples/page.html"},
	"/examples/todo": {Data:todo.Data, Index: "pages/examples/index.html", Page: "pages/examples/todo/page.html"},
	"/tmp": {Data: EmptyPageData, Index: "pages/index.html", Page: "pages/tmp/page.html"},
	"/docs": {Data:introduction.Data, Index: "pages/docs/index.html", Page: "pages/docs/introduction_/page.html"},
	"/examples/render": {Data:example_render.Data, Index: "pages/examples/index.html", Page: "pages/examples/render/page.html"},
	"/examples/data": {Data:example_data.Data, Index: "pages/examples/index.html", Page: "pages/examples/data/page.html"},
	"/examples/pages": {Data:example_pages.Data, Index: "pages/examples/index.html", Page: "pages/examples/pages/page.html"},
}

var DataList = map[string]DataRender{
	"/": {Data:home.Data, Index: "pages/index.html", Page: "pages/home_/page.html"},
	"/examples/data/rn": {Data:rn.Data, Index: "pages/examples/data/rn/index.html", Page: "pages/examples/data/rn/page.html"},
}

var RenderList = []RenderDefault{
	{"/docs/index", index.Render},
	{"/examples/todo/ssr", todo.Ssr_},
	{"/examples/todo/code", todo.Code_},
	{"/docs/pages", pages.Render},
	{"/docs/render", render.Render},
	{"/docs/router", router.Render},
	{"/examples/render/markdown", example_render.Markdown_},
	{"/examples/render/code", example_render.Code_},
	{"/docs/data", data.Render},
	{"/docs/handle", handle.Render},
	{"/docs/routing", routing.Render},
	{"/examples/data/code", example_data.Code_},
	{"/examples/pages/code", example_pages.Code_},
	{"/examples/pages/example", example_pages.Example_},
}

var HandleList = []HandlerDefault{
	{"/examples/todo/handleaddtask", todo.HandleAddTask_},
	{"/nav/home", nav.Home_},
	{"/nav/examples", nav.Examples_},
	{"/nav/docs", nav.Docs_},
}
